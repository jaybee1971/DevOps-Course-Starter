if: "(type = push AND branch IN (main)) OR (type = pull_request)"
os: linux
dist: bionic
language: bash
sudo: required

services:
  - docker

env:
  global:
    - FLASK_APP=todo_app.app
    - FLASK_ENV=production
    - MONGO_DB="todo_app_db"
    - COL_1="Not Started"
    - COL_2="In Progress"
    - COL_3="Completed"
    - DOCKER_USERNAME="jaybee1971"
    - secure: M8fRVi+KFg+KJoVhrdYJwrQWwSuiL8EI0H78FUeVHF8HwnZL70j6rf/cb+xZi0lN2NFQtDlMxoSR4W3kQh2EO6VBsuJJ0QT5Ngv6zUh9F+Bk89BVqC1Qg9cutQCiKjL2Yk78lqR0q+/PdxV7VjPRXa9MT42ViYlBcXLFpKn3i+y9Z4soWJ0qrtcqMJmz8E9Xq5crG5ndGOWTTJa6yeEw1XLcMJ5m1UPRajor0Mxvy8M+S725QLYHBj3fQp5eId25UTcWt4A4uQf+xPkMg/1dEdtGG5P5mLaaOhMRpIvWeh27IFjTyPH5XIO444o+zKtjI3X5qF8Ypt7v+lRuLYusWwqaXH2pPo3hUFq9E0uuZkIEI1vJKSvGijT1/kAx0F710U9yb4vnxNgzO0hDtn/4lmbytcuSa06rL8yQI1eKM4EfKqpQTgcR8BD2Kuh08HYf+v79bMk2m9+uNduRkJDPd6Nu82OEWyYB+IyYbyt2KwqboHWteetrmhD7FjRkl1Jms3nX8eQ8FGir+ZHoc4uy8gqt3OGxxcHIM7dzcBkdBykBjVgmpw8lnp1KleIaqleB1G3v+Mg7SHHSDssss5ict5s/RIMllPhnqGUMHarwymx2KGyutmGsaDuWcMmKYJXUQYLANmvor019ozE+Rb+fEqW8jcpJd1TfdGkZytYfXxs=
    - DOCKER_COMPOSE_VERSION=1.27.4
    - IMAGE_NAME=jaybee1971/todo_app
    - DOCKER_BUILDKIT=1
    - COMPOSE_DOCKER_CLI_BUILD=1
    - TF_VERSION=0.14.7
    
before_install:
  - set -e
  # install docker
  - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
  - export DOCKER_CLI_EXPERIMENTAL=enabled
  - docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce=5:19.03.8~3-0~ubuntu-bionic
  - docker info
  # install docker compose
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

stages:
- test
- deploy

jobs:
  include:
  - stage: test
    script:
    - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
    - docker-compose --file docker-compose-travis.yml build --build-arg BUILDKIT_INLINE_CACHE=1 
    - docker-compose --file docker-compose-travis.yml up --exit-code-from todoapp

  - stage: deploy
    if: branch = main
    install:
    - wget https://releases.hashicorp.com/terraform/"$TF_VERSION"/terraform_"$TF_VERSION"_linux_amd64.zip
    - unzip terraform_"$TF_VERSION"_linux_amd64.zip
    - sudo mv terraform /usr/local/bin/
    - rm terraform_"$TF_VERSION"_linux_amd64.zip
    - terraform init

    before_deploy:
    - terraform apply -var prefix=jb -var location=uksouth -var GH_CLIENT_ID=$GH_CLIENT_ID -var GH_SECRET=$GH_SECRET -auto-approve
    - echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
    - docker build --cache-from $IMAGE_NAME:latest --target todo-prod --tag $IMAGE_NAME --build-arg BUILDKIT_INLINE_CACHE=1 .
    - docker tag $IMAGE_NAME $IMAGE_NAME:${TRAVIS_COMMIT}
    - docker tag $IMAGE_NAME $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:${TRAVIS_COMMIT}
    - docker push $IMAGE_NAME:latest

    deploy:
      provider: script
      script: curl -dH -X POST "$(terraform output -raw cd_webhook)"

notifications:
  email:
    recipients:
      - jay.bee71@outlook.com
    on_success: never
    on_failure: always
